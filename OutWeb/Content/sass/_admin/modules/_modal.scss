@charset "UTF-8";

// overlay
.modal {
    z-index: z(overlay);
    overflow: auto;
    padding-top: $modal-top;
    padding-bottom: $modal-bottom;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.4);

    display: none;

    @include fixed(left 0 top 0);
    @include size(100%);

    @include diy-animate(fadeIn, .4s) {
        from { opacity: 0; }
        to   { top: 0; opacity: 1; }
    }

    @if $enable-RWD {
        @include mq-max(break(phone,-1)) {
            padding-top: 5%;
        }
    }

    &.in {
        display: block;
    }
}

.modal-close {
    background: none;
    color: $modal-close-color;
    font-size: em($modal-close-size);
    line-height: 1;

    position: absolute;
    right: $modal-padding;
    top: $modal-padding; 

    @include transition(color .35s);

    &:hover, &:focus {
        color: $modal-close-hover-color;
        cursor: pointer;
    }
    .modal > & {
        @include fixed(top 1% right 1%);
    }
    .modal-content & {
        @include absolute(top 5px right 10px);
    }
}

.modal-wrapper {
    width: $modal-width;
    margin: auto;
    position: relative;
    box-shadow: 0 3px 3px hsla(0,0,0,0.1);

    .modal-sm & {
        width: $modal-sm-width;
    }
}

// 內容
.modal-header {
    position: relative;
    padding: $modal-padding;
    padding-right: calc(#{$modal-padding}*2 + #{$modal-close-size});
    color: $modal-header-color;
    background: $modal-header-bg;
    border-radius: $modal-radius $modal-radius 0 0;
}
.modal-content {
    padding: $modal-padding;
    background-color: $modal-content-bg;
}
.modal-footer {
    padding: $modal-padding;
    background-color: $modal-footer-bg;
    border-top: $modal-footer-border;
    border-radius: 0 0 $modal-radius $modal-radius;
}

// body fix height
body.modal-open {
    overflow-y: hidden;
}

// 特效
.animate-top {
    position: relative;

    @include diy-animate(slide-down, .4s) {
        from { top: -300px; opacity: 0; }
        to   { top: 0; opacity: 1; }
    }
}
.animate-zoom {
    @include diy-animate(animatezoom, .6s) {
        from { @include transform(scale(0)); }
        to   { @include transform(scale(1)); }
    }
}